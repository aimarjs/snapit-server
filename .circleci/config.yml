version: 2
jobs:
  testing:
    docker:
      - image: circleci/node:latest

    working_directory: ~/snapit-server2

    steps:
      - checkout

      - attach_workspace:
          at: ~/snapit-server2

      - run: npm ci
      - persist_to_workspace:
          root: .
          paths:
            - .

      # - run: npm run test
      - run: npm run lint

  release:
    docker:
      - image: circleci/node:latest

    steps:

      - attach_workspace:
          at: ~/snapit-server2

      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Bump the version
          command: |
            git config --global user.email $GITHUB_EMAIL
            git config --global user.name $GITHUB_USER
            npm run patch -m "version %s [skip ci]"

      - run:
          name: Prep env variables
          command: |
            echo export TAG=$(eval node -p "require\(\'./package.json\'\).version") >> $BASH_ENV

      - run:
          name: Build and push docker image
          command: |
            docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            docker build -t $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG .
            docker tag $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:latest
            docker push $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG
            docker push $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:latest

      - run:
          name: Push version tag to github
          command: |
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            git push -q https://$GITHUB_TOKEN@github.com/aimarjs/snapit-server.git $CIRCLE_BRANCH
            git push --tags

      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy:
    docker:
      - image: circleci/node:latest

    steps:

      - attach_workspace:
          at: ~/snapit-server2

      - run:
          name: Deploy app
          command: |
            ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOSTNAME "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD"
            ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOSTNAME "/bin/bash ./deploy.sh $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:$(eval jq -r '.version' ~/snapit-landing/package.json) $CIRCLE_PROJECT_REPONAME $CIRCLE_BRANCH"

workflows:
  version: 2
  ci-pipeline:
    jobs:
      - testing
      - release:
          requires:
            - testing
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - release
          filters:
            branches:
              only:
                - master

# defaults: &defaults
#   docker:
#     - image: circleci/node:latest
#   working_directory: ~/snapit-server

# version: 2.1

# jobs:
#   checkout_code:
#     <<: *defaults
#     steps:
#       - checkout
#       - attach_workspace:
#           at: ~/snapit-server
#       - run: npm ci
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .
# test_and_report:
#     <<: *defaults
#     steps:
#       - attach_workspace:
#           at: ~/snapit-server
#       - run: npm ci
#       - run:
#           name: check vulnerabilities
#           command: |
#             if ["${CIRCLE_BRANCH}" == "develop"]; then
#               CI=true npm audit
#             else
#               CI=false npm audit
#             fi
#       - run: npm run lint
#       - run: npm run test
#       - store_test_results:
#           path: test-results

#   release-alpha:
#     <<: *defaults
#     steps:
#       - attach_workspace:
#           at: ~/snapit-server
#       - setup_remote_docker:
#           docker_layer_caching: true
#       - run:
#           name: Bump the version
#           command: |
#             git config --global user.email $GITHUB_EMAIL
#             git config --global user.name $GITHUB_USER
#             npm run release:alpha -m "version %s [skip ci]"
#       - run:
#           name: Prep env variables
#           command: |
#             echo export TAG=$(eval node -p "require\(\'./package.json\'\).version") >> $BASH_ENV
#       - run:
#           name: Build and push docker image
#           command: |
#             docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
#             docker build -t $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG .
#             docker tag $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:latest
#             docker push $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG
#             docker push $DOCKER_HUB_USER/$CIRCLE_PROJECT_REPONAME:latest
#       - run:
#           name: Push version tag to github
#           command: |
#             echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
#             git push -q https://$GITHUB_TOKEN@github.com/aimarjs/snapit-landing.git $CIRCLE_BRANCH
#             git push --tags
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .
